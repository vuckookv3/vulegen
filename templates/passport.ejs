const passport = require('passport');
const { ExtractJwt: ExtractJWT, Strategy: JWTStrategy } = require('passport-jwt');
const { Admin, User } = require('../models');

passport.use('jwt', new JWTStrategy({
    jwtFromRequest: ExtractJWT.fromAuthHeaderWithScheme('JWT'),
    secretOrKey: process.env.USER_JWT
}, async (jwt, cb) => {
    try {
        const user = await User.findById(jwt._id).exec();
        if (!user) return cb(null, false);
        return cb(null, user);
    } catch (err) {
        console.error('USER JWT STRATEGY ERROR: \n', err)
        return cb(err, false);
    }
}));


passport.use('admin', new JWTStrategy({
    jwtFromRequest: ExtractJWT.fromAuthHeaderWithScheme('JWT'),
    secretOrKey: process.env.ADMIN_JWT
}, async (jwt, cb) => {
    try {
        const admin = await Admin.findById(jwt._id).exec();
        if (!admin) return cb(null, false);
        return cb(null, admin);
    } catch (err) {
        console.error('ADMIN JWT STRATEGY ERROR: \n', err)
        return cb(err, false);
    }
}));
