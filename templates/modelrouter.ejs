const express = require('express');
const router = express.Router();
const { aW, AppError } = require('../../helpers');
const { <%= name %> } = require('../../models');
<%- user == 'User' ? `const { isLoggedIn } = require('../../middlewares');` : '' %>
<% if(crud.includes('r')) { %>
// INDEX
router.get('/', aW(async (req, res) => {
    const found = await <%= name %>.find({}).exec();
    res.json(found);
}));
<% } %>
<% if(crud.includes('c')) { %>
// CREATE
router.post('/', aW(async (req, res) => {
    const doc = new <%= name %>({ ...req.body });

    await doc.save();

    res.json(doc);
}));
<% } %>
<% if(crud.includes('r')) { %>
// SHOW
router.get('/:id', aW(async (req, res) => {
    const found = await <%= name %>.findById(req.params.id).exec();
    if (!found) throw new AppError(404);
    res.json(found);
}));
<% } %>
<% if(crud.includes('u')) { %>
// UPDATE
router.put('/:id', aW(async (req, res) => {
    const found = await <%= name %>.findById(req.params.id).exec();
    if (!found) throw new AppError(404);

    found.set({ ...req.body });
    await found.save();

    res.json(found);
}));
<% } %>
<% if(crud.includes('d')) { %>
// DELETE
router.delete('/:id', aW(async (req, res) => {
    const found = await <%= name %>.findById(req.params.id).exec();
    if (!found) throw new AppError(404);

    await found.remove();

    res.json(found);
}));
<% } %>

module.exports = router;

